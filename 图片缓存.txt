


一、UIL框架法
1.Application类。
  1>.可以用来存放全局变量，同一个应用的所有Activity都可以取到这些全局变量的值，换句话说，我们在某一个Activity中改变了这些全局变量的值，那么在同一个应用的其他Activity中值就会改变。
  2>.Application对象的生命周期是整个程序中最长的，它的生命周期就等于这个程序的生命周期。因为它是全局的单例的，所以在不同的Activity,Service中获得的对象都是同一个对象。所以可以通过Application来进行一些，如：数据传递、数据共享和数据缓存等操作。
  3>.数据缓存传递的具体方法有两种，第一就是首先创建一个类继承Application，里面存入全局变量。然后在Activity中调用getApplication()得到它的对象，就可以提取或者修改里面的全局变量了。第二个方法可以在Application类中创建HashMap，字符串做Key，Object做value，在活动中进行HashMap的插入移除，若要传递数据就用Intent传递key值即可。
  4>.需要在manifest中注册，定义name即可。


2.ImageLoader配置
  新建一个继承Application的类，利用ImageLoaderConfiguration.Builder创建ImageLoaderConfiguration对象可以内部类中进行参数配置。若利用ImageLoaderConfiguration.createdeDault创建对象，则不必配置，使用默认配置。
  关于配置参数。 .cacheInMemory() 加载的图片缓存到内存   .cacheOnDisc()        加载的图片缓存到sd卡
 
3.加载图片
  1>.进入Activity中，在onCreate()中通过getInstance()新建ImageLoader对象，
  2>.布局中创建imageView控件，再在活动中绑定该控件。
  3>.调用ImageLoader对象的displayImage()方法，第一个参数图片网址，第二个参数图片控件名。第三个参数监听器listener。
  4>.若是本地图片，只需把第一个参数改为“file:///本地图片地址”即可。
  5>.manifest中设置：声明Application的name ；添加Internet权限（网络访问权限）；添加READ_EXTERNAL_STORAGE权限（读取SD卡权限）；添加WRITE_EXTERNAL_STORAGE权限（写入SD卡权限） 
  6>.若要设置监听方法，第三个参数为new一个ImageLoaderListener接口的内部类。里面重写以下方法：onLoadingStarted(), onLoadingFailed(), onLoadingComplete(), onLoadingCancelled()。 


二、LruCache和BitmapFactory法

三、volley框架法